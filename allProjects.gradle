allprojects {
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'net.neoforged.gradle.userdev'
    apply plugin: 'net.neoforged.gradle.mixin'

    version = mod_version
    group = mod_group_id

    repositories {
        mavenLocal()
    }

    // Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
    java.toolchain.languageVersion = JavaLanguageVersion.of(21)

    repositories {
        // Other repositories can go above or below Modrinth's. We don't need priority :)
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            name "tterrag maven"
            url "https://maven.tterrag.com/"
        }
    }

    dependencies {
        // Specify the version of Minecraft to use.
        // Depending on the plugin applied there are several options. We will assume you applied the userdev plugin as shown above.
        // The group for userdev is net.neoforged, the module name is neoforge, and the version is the same as the neoforge version.
        // You can however also use the vanilla plugin (net.neoforged.gradle.vanilla) to use a version of Minecraft without the neoforge loader.
        // And its provides the option to then use net.minecraft as the group, and one of; client, server or joined as the module name, plus the game version as version.
        // For all intends and purposes: You can treat this dependency as if it is a normal library you would use.
        implementation "net.neoforged:neoforge:${neo_version}"

        // Example mod dependency with JEI
        // The JEI API is declared for compile time use, while the full JEI artifact is used at runtime
        // compileOnly "mezz.jei:jei-${mc_version}-common-api:${jei_version}"
        // compileOnly "mezz.jei:jei-${mc_version}-forge-api:${jei_version}"
        // runtimeOnly "mezz.jei:jei-${mc_version}-forge:${jei_version}"

        // Example mod dependency using a mod jar from ./libs with a flat dir repository
        // This maps to ./libs/coolmod-${mc_version}-${coolmod_version}.jar
        // The group id is ignored when searching -- in this case, it is "blank"
        // implementation "blank:coolmod-${mc_version}:${coolmod_version}"

        // Example mod dependency using a file as dependency
        // implementation files("libs/coolmod-${mc_version}-${coolmod_version}.jar")

        // Example project dependency using a sister or child project:
        // implementation project(":myproject")

        // For more info:
        // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
        // http://www.gradle.org/docs/current/userguide/dependency_management.html

        implementation "maven.modrinth:embeddium:ktzp4Wfg"
        compileOnly "maven.modrinth:oculus:vVuYfukI"
        //compileOnly files(new File(rootDir, "libs/iris-1.6.10.jar"))

        implementation "maven.modrinth:cloth-config:PjKtC8lG"

//        implementation "io.github.llamalad7:mixinextras-neoforge:0.2.1" // Now already included with newest NEO

        compileOnly "com.jozufozu.flywheel:flywheel-forge-1.20.1:1.0.0-alpha-83" // No current version available yet

        implementation "maven.modrinth:pehkui:vKeyKfkC"// No current version available yet
    }
}